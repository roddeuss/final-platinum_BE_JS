{
  "swagger": "2.0",
  "info": {
    "description": "Dokumentasi API Final Project BE",
    "version": "1.0.0",
    "title": "Dokumentasi API Final Project BE",
    "contact": {
      "url": "https://www.github.com/"
    }
  },
  "host": "be-kel1.herokuapp.com",
  "tags": [
    {
      "name": "Auth",
      "description": "API Auth"
    },
    {
      "name": "Product",
      "description": "API Product"
    },
    {
      "name": "User",
      "description": "API User"
    },
    {
      "name": "Wishlist",
      "description": "API Wishlist"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/login": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get /login",
        "description": "",
        "operationId": "getLogin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Get /login"
          }
        }
      },
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "description": "",
        "operationId": "postLogin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "form input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil Login"
          },
          "400": {
            "description": "Gagal Login"
          }
        }
      }
    },
    "/logout":{
      "post": {
        "tags": ["Auth"],
        "summary": "mehtod logout user",
        "description": "Logout user",
        "operationId": "postLogout",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Logut berhasil"
          }
        }
      }
    },
    "/register":{
      "get": {
        "tags": ["Auth"],
        "summary": "GET /register",
        "description": "Get register page",
        "operationId": "getRegister",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "GET Register success"
          }
        }
      },
      "post": {
        "tags": ["Auth"],
        "summary": "POST /register",
        "description": "Post register page",
        "operationId": "postRegister",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "form input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GET Register success"
          }
        }
      }
    },
    "/AllProducts?tab={tab}&cat={cat}&search={search}":{
      "get": {
        "tags": ["Product"],
        "summary": "Get All publish product",
        "description": "",
        "operationId": "getAllProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tab",
            "in": "query",
            "description": "Get tab Product",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cat",
            "in": "query",
            "description": "Get cat Product",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Get search Product",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          },
          "400": {
            "description": "Cannot get product"
          }
        }
      }
    },
    "/products?tab={tab}":{
      "get": {
        "tags": ["Product"],
        "summary": "Get All publish product",
        "description": "",
        "operationId": "getProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tab",
            "in": "query",
            "description": "Get tab Product",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          },
          "400": {
            "description": "Cannot get product"
          }
        }
      }
    },
    "/product/user":{
      "get": {
        "tags": ["Product"],
        "summary": "Get All user product",
        "description": "",
        "operationId": "getUserProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          },
          "400": {
            "description": "Cannot get product"
          }
        }
      }
    },
    "/product/{productId}":{
      "get": {
        "tags": ["Product"],
        "summary": "Get Id publish product",
        "description": "",
        "operationId": "getIdProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          },
          "400": {
            "description": "Cannot get product"
          }
        }
      },
      "put":{
        "tags": ["Product"],
        "summary": "Put Id product",
        "description": "",
        "operationId": "putIdProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in" : "formData",
            "description": "input name product",
            "required" : true,
            "type" : "string"
          },
          {
            "name": "category",
            "in" : "formData",
            "description": "input category product",
            "required" : true,
            "type" : "string",
            "enum": ["A","B","C","D"]
          },
          {
            "name": "price",
            "in" : "formData",
            "description": "input price product",
            "required" : true,
            "type" : "integer"
          },
          {
            "name": "description",
            "in" : "formData",
            "description": "input description product",
            "required" : true,
            "type" : "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "input image product",
            "required": true,
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            }
          },
          {
            "name": "publish",
            "in": "formData",
            "description": "input image product",
            "required": true,
            "type": "boolean",
            "enum": [true, false]
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          },
          "400": {
            "description": "Cannot get product"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Id product",
        "description": "",
        "operationId": "deleteIdProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete product"
          },
          "400": {
            "description": "Cannot delete product"
          }
        }
      }
    },
    "/product/user/sold": {
      "get": {
        "tags": ["Product"],
        "summary": "GET Product sold",
        "description": "",
        "operationId": "getProductSold",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get Product sold"
          },
          "400": {
            "description": "Cannot get product sold"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": ["Product"],
        "summary": "POST product",
        "description": "",
        "operationId": "postProduct",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in" : "formData",
            "description": "input name product",
            "required" : true,
            "type" : "string"
          },
          {
            "name": "category",
            "in" : "formData",
            "description": "input category product",
            "required" : true,
            "type" : "string",
            "enum": ["A","B","C","D"]
          },
          {
            "name": "price",
            "in" : "formData",
            "description": "input price product",
            "required" : true,
            "type" : "integer"
          },
          {
            "name": "description",
            "in" : "formData",
            "description": "input description product",
            "required" : true,
            "type" : "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "input image product",
            "required": true,
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            }
          },
          {
            "name": "publish",
            "in": "formData",
            "description": "input image product",
            "required": true,
            "type": "boolean",
            "enum": [true, false]
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          },
          "400": {
            "description": "Cannot get product"
          }
        }
      }
    },
    "/product/publish/{productId}": {
      "post": {
        "tags": ["Product"],
        "summary": "Get Id publish product",
        "description": "",
        "operationId": "postPublishIdProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "post product publish id"
          },
          "400": {
            "description": "Cannot publish product id"
          }
        }
      }
    },
    "/product/filter?cat={cat}": {
      "get" : {
        "tags" : ["Product"],
        "summary" : "GET Filter Product",
        "description" : "",
        "operationId" : "getFilterProduct",
        "consumes" : ["application/json"],
        "produces" : ["application/json"],
        "parameters": [
          {
            "name": "cat",
            "in": "query",
            "description": "Get Filter Product",
            "required": true,
            "type": "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Get Filtered Product Berhasil"
          },
          "540" : {
            "description" : "Get Filtered Product Gagal"
          }
        }
      }
    },
    "/search/product?search={search}": {
      "get" : {
        "tags" : ["Product"],
        "summary" : "GET Search Product",
        "description" : "",
        "operationId" : "getSearchProduct",
        "consumes" : ["application/json"],
        "produces" : ["application/json"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Get Search Product",
            "required": true,
            "type": "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Get Search Product Berhasil"
          },
          "400" : {
            "description" : "Get Search Product Gagal"
          }
        }
      }
    },
    "/users/profile": {
      "get" :{
        "tags" : ["User"],
        "summary" : "GET Profile",
        "description" : "",
        "operationId" : "getProfile",
        "consumes" : ["application/json"],
        "produces" : ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Get Profile Berhasil"
          },
          "500" : {
            "description" : "Get Profile Gagal"
          }
        }
      },
      "put" :{
        "tags" : ["User"],
        "summary" : "Update Profile",
        "description" : "",
        "operationId" : "putProfile",
        "consumes": ["multipart/form-data"],
        "produces" : ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "formData",
            "description" : "input name user",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "city",
            "in" : "formData",
            "description" : "input city user",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "address",
            "in" : "formData",
            "description" : "input address user",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "number_mobile",
            "in" : "formData",
            "description" : "input number_mobile user",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "image",
            "in": "formData",
            "description": "input image user",
            "required": false,
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Success update profile"
          },
          "500" : {
            "description" : "Failed update profile"
          }
        }
      }
    },
    "/tawar": {
      "get":{
        "tags":["Tawar"],
        "summary": "Get All Tawar",
        "description" : "",
        "operationId": "getTawar",
        "consumes" :["application/json"],
        "produces": ["application/json"],
        "security": [
          {
          "Authorization" : []
          }
        ],
        "responses" :{
          "200" : {
            "description": "succes get tawar"
          },
          "500":{
            "description" : "failed get tawar"
          }
        }
      },
      "post" : {
        "tags": ["Tawar"],
        "summary": "Get All Tawar",
        "description": "",
        "operationId": "createTawar",
        "consumes":["application/json"],
        "produces":["application/json"],
        "security":[
          {
            "Authorization": []
          }
        ],
        "parameters":[ 
          {
            "name" : "userId",
            "in" : "path",
            "description" : "get User Id",
            "required" : true,
            "type" : "string"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in" : "formData",
            "description": "input price tawar",
            "required" : true,
            "type" : "integer"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Success get tawar"
          },
          "500" : {
            "description" : "Failed get tawar"
          }
        }
      },
      "delete": {
        "tags": ["Tawar"],
        "summary": "Delete Id tawar",
        "description": "",
        "operationId": "deleteTawar",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete product"
          },
          "400": {
            "description": "Cannot delete product"
          }
        }
      }
    },
    "/tawar/product/{productid}" :{
      "get": {
        "tags": ["Tawar"],
        "summary": "Get Tawar Product",
        "description": "",
        "operationId": "getTawarProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Get Product Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Tawar product"
          },
          "400": {
            "description": "Cannot get Tawar product"
          }
        }
    }
  },
  "/tawar/tawar/{tawarId}" :{
    "get": {
      "tags": ["Tawar"],
      "summary": "Get Tawar Id",
      "description": "",
      "operationId": "getTawarId",
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "parameters": [
        {
          "name": "tawarId",
          "in": "path",
          "description": "Get Tawar Id",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Get Tawar Id"
        },
        "400": {
          "description": "Cannot get Tawar Id"
        }
      }
  }
},
  "/tawar/user/sell" :{
    "get": {
      "tags": ["Tawar"],
      "summary": "Get Tawar User Seller",
      "description": "",
      "operationId": "getTawarSeller",
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "description": "Get User Id",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Get Tawar Seller"
        },
        "400": {
          "description": "Cannot Get Tawar Seller Product"
        }
      }
  }
},"/tawar/user/buy" :{
  "get": {
    "tags": ["Tawar"],
    "summary": "Get Tawar User Buyer",
    "description": "",
    "operationId": "getTawarBuyer",
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "parameters": [
      {
        "name": "userId",
        "in": "path",
        "description": "Get User Id",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {
      "200": {
        "description": "Get Tawar Buyer"
      },
      "400": {
        "description": "Cannot Get Tawar Buyer Product"
      }
    }
  }
},
    "/wishlist": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get all wishlist",
        "description": "",
        "operationId": "getWishlist",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Success get wishlist"
          },
          "500" : {
            "description" : "Failed get wishlist"
          }
        }
      },
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add wishlist",
        "description": "",
        "operationId": "createWishlist",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "body",
            "description": "input productId",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "integer"
                }
              }
            }

          }
        ],
        "responses": {
          "200": {
            "description": "Success create wishlist"
          },
          "500": {
            "description": "Failed create wishlist"
          }
        }
        
      }
    },
    "/transaksi" : {
      "post": {
        "tags": ["Transaksi"],
        "summary": "Create Transaksi",
        "description": "",
        "operationId": "createTransaksi",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "body",
            "description": "input productId",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "integer"
                },
                "productId": {
                  "type": "integer"
                },
                "tawarId": {
                  "type": "integer"
                },
                "price": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                }
              }
            }

          }
        ],
        "responses": {
          "200": {
            "description": "Success create transaksi"
          },
          "500": {
            "description": "Failed create transaksi"
          }
        }
      }
    },
    "/transaksi/{id}": {
      "put": {
        "tags": ["Transaksi"],
        "summary": "Update Transaksi",
        "description": "",
        "operationId": "updateTransaksi",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "body",
            "description": "input productId",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "transaksiId": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                }
              }
            }

          }
        ],
        "responses": {
          "200": {
            "description": "Success update transaksi"
          },
          "500": {
            "description": "Failed update transaksi"
          }
        }
      }
    },
    "/transaksi/buyer": {
      "get": {
        "tags": ["Transaksi"],
        "summary": "Get Transaksi Buyer",
        "description": "",
        "operationId": "getTransaksiBuyer",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get Transaksi Buyer"
          },
          "500": {
            "description": "Cannot get Transaksi Buyer"
          }
        }
      }
    },
    "/transaksi/seller": {
      "get": {
        "tags": ["Transaksi"],
        "summary": "Get Transaksi Seller",
        "description": "",
        "operationId": "getTransaksiSeller",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get Transaksi Seller"
          },
          "500": {
            "description": "Cannot get Transaksi Seller"
          }
        }
      }
    },
    "/notif": {
      "get": {
        "tags": ["Notif"],
        "summary": "het Notifikasi",
        "description": "",
        "operationId": "getNotif",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get Notif"
          },
          "500": {
            "description": "Cannot get Notif"
          }
        }
      }
    },
    "/notif/{tawarId}": {
      "delete": {
        "tags": ["Notif"],
        "summary": "Delete Notif",
        "description": "",
        "operationId": "deleteNotif",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success Delete Notif"
          },
          "500": {
            "description": "Cannot Delete Notif"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "test@test.com"
        },
        "password": {
          "type": "string",
          "example": "test"
        }
      }
    },
    "register": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Budiman"
        },
        "email": {
          "type": "string",
          "example": "budiman@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "budiman"
        }
      }
    },
    "product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jam Tangan Kotak"
        },
        "category": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}